name: CI Checks and Reports Update

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  # Manual triggering is allowed as well
  workflow_dispatch: 

jobs:
  run-tests:
    name: Run Tests and Generate Reports
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Setup Nox
        uses: wntrblm/nox@2025.05.01

      - name: Run Nox sessions
        run: nox

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()  # Upload even if tests fail
        with:
          name: test-reports
          path: docs/reports/*-report.*
          retention-days: 14  


  commit_reports:
    name: Commit and Push Reports
    if: github.ref == 'refs/heads/main' # Only run on push to main branch
    runs-on: ubuntu-latest
    needs: run-tests
    permissions:
      contents: write  # Grant write access to repository contents for GITHUB_TOKEN

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Download the reports from the previous job
      - name: Download test reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: docs/reports/

      - name: Commit and push reports
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Fetch the remote reports branch first
          git fetch origin reports || true

          # Then create/switch to reports branch based on what we just fetched
          git checkout -B reports origin/reports || git checkout -B reports
          
          git add docs/reports/
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update test reports - $(date +'%Y-%m-%d %H:%M:%S')"
            # This will use GITHUB_TOKEN automatically provided by GitHub Actions
            git push --force-with-lease origin reports
          fi          